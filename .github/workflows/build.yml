name: Build project

on:
  push:
  pull_request:
  release:
  deployment:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout project sources"
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: "Build win unit tests"
        run: |
          echo "pwd"
          pwd
          cd rust
          executables=$(cargo test --no-run --message-format=json | jq -r "select(.profile.test == true) | .executable")
          cd target/debug/deps
          rm -f *.o *.d *.dylib *.rlib *.rmeta
          echo "WIN_UNITTESTS=$(echo ${executables})" >> "$GITHUB_ENV"
          echo $WIN_UNITTESTS
          pwd
          ls -al
      - name: "Store win unit tests"
        uses: actions/upload-artifact@v3.1.2
        with:
          name: release
          path: |
            rust/target/debug/deps/
  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: "Checkout project sources"
        uses: actions/checkout@v3
      - name: "Download win unit tests"
        uses: actions/download-artifact@v3
        with:
          name: release
          path: |
            tests/
      - name: "In Test"
        run: |
          ls -al
          sh rust/scripts/run_win_unittests.sh tests
